# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Tatum - generate CSharp.Core from OpenAPI

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]

env:
  PROJECT_PATH: ./Tatum.CSharp.Core/Tatum.CSharp.Core.csproj
  PACKAGE_SOURCE: https://nuget.pkg.github.com/tatumio/index.json
  OPENAPI_PATH: ./tatum/openapi_trim_trans.json
  MAPPING_PATH: ./tatum/oneOfMapping.json
  CONFIG_PATH: ./tatum/config.yaml
  DOWNSTREAM_DISPATCH_ADDRESS: https://api.github.com/repos/tatumio/tatum-csharp/actions/workflows/dotnet.yml/dispatches

jobs:
  Build_Version:
    name: Get Version
    uses: ./.github/workflows/calculateBuildVersion.yml
    
  Generate_Core:
    name: Generate Core Package
    runs-on: ubuntu-latest
    needs: Build_Version

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn clean package -f pom.xml -DskipTests
    - name: Generate Clients
      run: java -jar ./modules/openapi-generator-cli/target/openapi-generator-cli.jar generate -i ${{ env.OPENAPI_PATH }} -c ${{ env.CONFIG_PATH }} --additional-properties=oneOfMappingFilePath=${{ env.MAPPING_PATH }}
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x
    - name: Add package source
      run: dotnet nuget add source --username tatumio --password ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text --name github "${{ env.PACKAGE_SOURCE }}"
    - name: Restore dependencies
      run: dotnet restore ${{ env.PROJECT_PATH }}
    - name: Build
      run: dotnet build ${{ env.PROJECT_PATH }} --no-restore --configuration Release
    - name: Pack
      run: dotnet pack ${{ env.PROJECT_PATH }} --no-build --no-restore --configuration Release /p:Version=${{ needs.Build_Version.outputs.version }} --output .
    - name: Push to Github Packages
      run: dotnet nuget push "./Tatum.CSharp.Core.${{ needs.Build_Version.outputs.version }}.nupkg" --skip-duplicate --api-key ${{ secrets.ACTIONS_PACKAGE_SOURCE_PAT }} --source "github"
    - name: Push to SDK repo
      run: |
          git config user.name "generator-workflow"
          git config user.email "csharp-generator@tatum.io"
          git config --unset-all http.https://github.com/.extraheader
          git clone https://user:${{ secrets.DISPATCH_TOKEN }}@github.com/tatumio/tatum-csharp.git
          cd tatum-csharp
          git checkout develop
          mv ./Tatum.CSharp.Core ./tatum-csharp
          git add .
          git commit -m 'New Tatum.CSharp.Core generated'
          git push
